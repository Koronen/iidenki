package sheets;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import vocab.Kanji;

public class KanjiSheetHTMLPrinter {
	BufferedWriter out;
	int currentrow;
	private static int kanjisize = 6;
	private static int kanjiwidthfactor = 10;
	private static int pagewidth = 75;
	
	public KanjiSheetHTMLPrinter(File file){
		currentrow = 0;
		FileWriter fstream = null;
		try {
			fstream = new FileWriter(file);
		} catch (IOException e) {
			e.printStackTrace();
		}
		out = new BufferedWriter(fstream);
		generateHeader();
	}
	
	private void generateHeader(){
		try {
			out.write(	"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n"+
						"<html>\n"+
						"<head>\n"+
						"<meta content=\"text/html; charset=ISO-8859-1\"\n"+
						"http-equiv=\"Content-Type\">\n"+
						"<title>iidenki - kanji practice sheet</title>\n"+
						"</head>\n"+
						"<body>\n");
			out.write("<big><b>kanji practice sheet</b></big><br>");
			out.write("generated by iidenki language training suite<br>");
			out.write("<i>please write the appropriate mix of kanji and hiragana in the empty spaces</i><br>");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	
	public void close(){
		try {
			out.write("</body>\n</html>");
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void generateEntry(Kanji kanji, boolean eng, boolean read){
		try{
			int instlength = 0;
			if (eng && read){
				instlength = kanji.reading.length() + kanji.translation.length();
			}else if (eng){
				instlength = kanji.translation.length();
			}else{
				instlength = kanji.reading.length();
			}
			int thisrow = instlength + kanji.kanji.length() * kanjiwidthfactor;
			if (currentrow + thisrow > pagewidth){
				currentrow = 0;
				out.write("<br>\n");
			}
			if (eng && read){
				out.write(kanji.reading + "(" + kanji.translation + ")");
			}else if (eng){
				out.write(kanji.translation);
			}else{
				out.write(kanji.reading);
			}
			for (int i = 0; i < kanjisize; i++){
				out.write("<big>");
			}
			for (int i = 0; i < kanji.kanji.length(); i++){
				out.write("_ ");
			}
			for (int i = 0; i < kanjisize; i++){
				out.write("</big>");
			}
			currentrow += thisrow;
		}catch (IOException e){
			e.printStackTrace();
		}
	}
	
	public void generateEntries(List<Kanji> list, boolean eng, boolean read){
		for (Kanji k : list){
			generateEntry(k, eng, read);
		}
	}
	
	public void print(String text){
		try {
			out.write(text + "<br>\n");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
